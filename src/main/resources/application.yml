eatery.app.version: v.0.0.1

logging:
  level:
    com.zelusik.eatery: debug
    org.hibernate.SQL: debug

spring:
  servlet:
    multipart:
      max-request-size: 10MB
      max-file-size: 10MB
  jpa:
    open-in-view: false
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100

server:
  tomcat:
    max-swallow-size: 10MB
    max-http-form-post-size: 10MB

cloud:
  aws:
    credentials:
      access-key: ${AWS_S3_ACCESS_KEY}
      secret-key: ${AWS_S3_SECRET_KEY}
    region:
      static: ap-northeast-2
    s3:
      bucket-name: eatery-s3-bucket
    stack:
      auto: false
      
---
# Settings for local(dev)
management.endpoints.web.exposure.include: "*"
web-scraping.server.url: ${LOCAL_SCRAPING_SERVER_URL}

spring:
  config.activate.on-profile: local
  datasource:
    url: ${EATERY_LOCAL_DB_URL}
    username: ${EATERY_LOCAL_DB_USERNAME}
    password: ${EATERY_LOCAL_DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  redis:
    host: localhost
    port: 6379
  jpa:
    hibernate.ddl-auto: update
    defer-datasource-initialization: true
  sql.init.mode: always

---
# Settings for production(dev-server)
jwt.secret.key: ${JWT_SECRET_KEY}
web-scraping.server.url: ${PROD_SCRAPING_SERVER_URL}

logging:
  level:
    com.zelusik.eatery: info
    org.hibernate.SQL: info

spring:
  config.activate.on-profile: prod
  datasource:
    url: ${EATERY_PROD_DB_URL}
    username: ${EATERY_PROD_DB_USERNAME}
    password: ${EATERY_PROD_DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  redis:
    host: ${EATERY_PROD_REDIS_HOST}
    port: 6379
  jpa:
    hibernate.ddl-auto: update
    properties:
      hibernate:
        format_sql: false
  sql.init.mode: never

---
# Settings for test
spring:
  config.activate.on-profile: test
  datasource:
    url: jdbc:h2:mem:test
    username: sa
    password:
    driver-class-name: org.h2.Driver
  jpa:
    hibernate.ddl-auto: create
    defer-datasource-initialization: true
  sql.init.mode: always